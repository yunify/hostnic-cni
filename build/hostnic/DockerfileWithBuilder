FROM golang:1.19-alpine as builder
ARG CORE_BIN_DIR
ARG TOOLS_BIN_DIR
WORKDIR /hostnic-cni
COPY . .
RUN CGO_ENABLED=0 GOOS=linux go build -ldflags "-w" -o ${CORE_BIN_DIR}/hostnic-controller ./cmd/controller/main.go \
    && CGO_ENABLED=0 GOOS=linux go build -ldflags "-w" -o ${CORE_BIN_DIR}/hostnic-agent ./cmd/ipam/main.go \
    && CGO_ENABLED=0 GOOS=linux go build -ldflags "-w" -o ${CORE_BIN_DIR}/hostnic ./cmd/hostnic/hostnic.go \
    && CGO_ENABLED=0 GOOS=linux go build -ldflags "-w" -o ${TOOLS_BIN_DIR}/ipam-client ./cmd/tools/ipam-client/client.go \
    && CGO_ENABLED=0 GOOS=linux go build -ldflags "-w" -o ${TOOLS_BIN_DIR}/hostnic-client ./cmd/tools/hostnic-client/client.go \
    && CGO_ENABLED=0 GOOS=linux go build -ldflags "-w" -o ${TOOLS_BIN_DIR}/vxnet-client ./cmd/tools/vxnet-client/client.go \
    && CGO_ENABLED=0 GOOS=linux go build -ldflags "-w" -o ${TOOLS_BIN_DIR}/patch-node ./cmd/tools/node-patch/patch.go \
    && CGO_ENABLED=0 GOOS=linux go build -ldflags "-w" -o $(TOOLS_BIN_DIR)/dhcp-client ./cmd/tools/dhcp-client/client.go


FROM alpine
ARG CORE_BIN_DIR
RUN apk --no-cache add ca-certificates \
    && update-ca-certificates 2>/dev/null || true
WORKDIR /app
COPY --from=builder /hostnic-cni/${CORE_BIN_DIR} .
ADD scripts .
ENTRYPOINT [ "sh /app/scripts/install_hostnic.sh" ]
